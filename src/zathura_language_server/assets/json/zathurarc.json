{
  "$id": "https://github.com/Freed-Wu/zathura-language-server/blob/main/src/termux_language_server/assets/json/zathurarc.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$comment": "Don't edit this file directly! It is generated by `zathura-language-server --generate-schema=zathurarc`.",
  "type": "object",
  "properties": {
    "set": {
      "description": "Changing options\nIn addition to the built-in **:set** command zathura offers more options to be changed and makes those changes permanent. To overwrite an option you just have to add a line structured like the following\nset <option> <new value> \nThe **option** field has to be replaced with the name of the option that should be changed and the **new value** field has to be replaced with the new value the option should get. The type of the value can be one of the following:\nINT - An integer number\nFLOAT - A floating point number\nSTRING - A character string\nBOOL - A boolean value (\\\"true\\\" for true, \\\"false\\\" for false)\nIn addition we advice you to check the options to get a more detailed view of the options that can be changed and which values they should be set to.\nThe following example should give some deeper insight of how the **set** command can be used\nset option1 5 set option2 2.0 set option3 hello set option4 hello\\ world set option5 \"hello world\" \nEspecially for options with strings as values, note that escaping of special characters and white spaces is necessary. In the above example, **option4** and **option5** are both set to **hello** world, but **set option6 hello world** would set **option6** only to **hello**.\nFor colors, zathura supports HTML color codes and CSS3-style **rgb(r,g,b)** and **rgba(r,g,b,a)** values. If you want to use color codes for some options, make sure to quote them accordingly or to escape the hash symbol.\nset default-fg \"#CCBBCC\" set default-fg \\#CCBBCC \nFor **rgba**, note that it parses the color components as integers between 0 and 255 and the alpha component as float between 0 and 1.",
      "type": "object",
      "properties": {
        "n-completion-items": {
          "description": "Defines the maximum number of displayed completion entries.",
          "type": "integer",
          "default": 15
        },
        "completion-bg": {
          "description": "Defines the background color that is used for command line completion entries",
          "type": "string",
          "default": "#232323",
          "format": "color"
        },
        "completion-fg": {
          "description": "Defines the foreground color that is used for command line completion entries",
          "type": "string",
          "default": "#DDDDDD",
          "format": "color"
        },
        "completion-group-bg": {
          "description": "Defines the background color that is used for command line completion group elements",
          "type": "string",
          "default": "#000000",
          "format": "color"
        },
        "completion-group-fg": {
          "description": "Defines the foreground color that is used for command line completion group elements",
          "type": "string",
          "default": "#DEDEDE",
          "format": "color"
        },
        "completion-highlight-bg": {
          "description": "Defines the background color that is used for the current command line completion element",
          "type": "string",
          "default": "#9FBC00",
          "format": "color"
        },
        "completion-highlight-fg": {
          "description": "Defines the foreground color that is used for the current command line completion element",
          "type": "string",
          "default": "#232323",
          "format": "color"
        },
        "default-fg": {
          "description": "Defines the default foreground color",
          "type": "string",
          "default": "#DDDDDD",
          "format": "color"
        },
        "default-bg": {
          "description": "Defines the default background color",
          "type": "string",
          "default": "#000000",
          "format": "color"
        },
        "exec-command": {
          "description": "Defines a command the should be prepended to any command run with exec.",
          "type": "string"
        },
        "font": {
          "description": "Defines the font that will be used",
          "type": "string",
          "default": "monospace normal 9"
        },
        "guioptions": {
          "description": "Shows or hides GUI elements. If it contains \\'c\\', the command line is displayed. If it contains \\'s\\', the statusbar is displayed. If it contains \\'h\\', the horizontal scrollbar is displayed. If it contains \\'v\\', the vertical scrollbar is displayed.",
          "type": "string",
          "default": "s",
          "pattern": "[cshv]*"
        },
        "inputbar-bg": {
          "description": "Defines the background color for the inputbar",
          "type": "string",
          "default": "#131313",
          "format": "color"
        },
        "inputbar-fg": {
          "description": "Defines the foreground color for the inputbar",
          "type": "string",
          "default": "#9FBC00",
          "format": "color"
        },
        "notification-bg": {
          "description": "Defines the background color for a notification",
          "type": "string",
          "default": "#FFFFFF",
          "format": "color"
        },
        "notification-fg": {
          "description": "Defines the foreground color for a notification",
          "type": "string",
          "default": "#000000",
          "format": "color"
        },
        "notification-error-bg": {
          "description": "Defines the background color for an error notification",
          "type": "string",
          "default": "#FFFFFF",
          "format": "color"
        },
        "notification-error-fg": {
          "description": "Defines the foreground color for an error notification",
          "type": "string",
          "default": "#FF1212",
          "format": "color"
        },
        "notification-warning-bg": {
          "description": "Defines the background color for a warning notification",
          "type": "string",
          "default": "#FFFFFF",
          "format": "color"
        },
        "notification-warning-fg": {
          "description": "Defines the foreground color for a warning notification",
          "type": "string",
          "default": "#FFF712",
          "format": "color"
        },
        "statusbar-bg": {
          "description": "Defines the background color of the statusbar",
          "type": "string",
          "default": "#000000",
          "format": "color"
        },
        "statusbar-fg": {
          "description": "Defines the foreground color of the statusbar",
          "type": "string",
          "default": "#FFFFFF",
          "format": "color"
        },
        "statusbar-h-padding": {
          "description": "Defines the horizontal padding of the statusbar and notificationbar",
          "type": "integer",
          "default": 8
        },
        "statusbar-v-padding": {
          "description": "Defines the vertical padding of the statusbar and notificationbar",
          "type": "integer",
          "default": 2
        },
        "window-icon": {
          "description": "Defines the path for a icon to be used as window icon.",
          "type": "string"
        },
        "window-height": {
          "description": "Defines the window height on startup",
          "type": "integer",
          "default": 600
        },
        "window-width": {
          "description": "Defines the window width on startup",
          "type": "integer",
          "default": 800
        },
        "abort-clear-search": {
          "description": "Defines if the search results should be cleared on abort.",
          "type": "boolean",
          "default": true
        },
        "adjust-open": {
          "description": "Defines which auto adjustment mode should be used if a document is loaded. Possible options are \\\"best-fit\\\" and \\\"width\\\".",
          "enum": [
            "best-fit",
            "width"
          ],
          "type": "string",
          "default": "best-fit"
        },
        "advance-pages-per-row": {
          "description": "Defines if the number of pages per row should be honored when advancing a page.",
          "type": "boolean",
          "default": false
        },
        "continuous-hist-save": {
          "description": "Tells zathura whether to save document history at each page change or only when closing a document.",
          "type": "boolean",
          "default": false
        },
        "database": {
          "description": "Defines the database backend to use for bookmarks and input history. Possible values are \\\"plain\\\", \\\"sqlite\\\" (if built with sqlite support) and \\\"null\\\". If \\\"null\\\" is used, bookmarks and input history will not be stored.",
          "enum": [
            "plain",
            "sqlite",
            "null"
          ],
          "type": "string",
          "default": "plain"
        },
        "dbus-service": {
          "description": "En/Disables the D-Bus service. If the services is disabled, SyncTeX forward synchronization is not available.",
          "type": "boolean",
          "default": true
        },
        "dbus-raise-window": {
          "description": "Defines whether zathura\\'s window should be raised when receiving certain commands via D-Bus.",
          "type": "boolean",
          "default": true
        },
        "filemonitor": {
          "description": "Defines the file monitor backend used to check for changes in files. Possible values are \\\"glib\\\", \\\"signal\\\" (if signal handling is supported), and \\\"noop\\\". The \\\"noop\\\" file monitor does not trigger reloads.",
          "enum": [
            "glib",
            "signal",
            "noop"
          ],
          "type": "string",
          "default": "glib"
        },
        "incremental-search": {
          "description": "En/Disables incremental search (search while typing).",
          "type": "boolean",
          "default": true
        },
        "highlight-color": {
          "description": "Defines the color that is used for highlighting parts of the document (e.g.: show search results)",
          "type": "string",
          "default": "#9FBC00",
          "format": "color"
        },
        "highlight-fg": {
          "description": "Defines the color that is used for text when highlighting parts of the document (e.g.: number for links).",
          "type": "string",
          "default": "#9FBC00",
          "format": "color"
        },
        "highlight-active-color": {
          "description": "Defines the color that is used to show the current selected highlighted element (e.g: current search result)",
          "type": "string",
          "default": "#00BC00",
          "format": "color"
        },
        "highlight-transparency": {
          "description": "Defines the opacity of a highlighted element",
          "type": "number",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        },
        "page-padding": {
          "description": "The page padding defines the gap in pixels between each rendered page.",
          "type": "integer",
          "default": 1
        },
        "page-cache-size": {
          "description": "Defines the maximum number of pages that could be kept in the page cache. When the cache is full and a new page that isn\\'t cached becomes visible, the least recently viewed page in the cache will be evicted to make room for the new one. Large values for this variable are NOT recommended, because this will lead to consuming a significant portion of the system memory.",
          "type": "integer",
          "default": 15
        },
        "page-thumbnail-size": {
          "description": "Defines the maximum size in pixels of the thumbnail that could be kept in the thumbnail cache per page. The thumbnail is scaled for a quick preview during zooming before the page is rendered. When the page is rendered, the result is saved as the thumbnail only if the size is no more than this value. A larger value increases quality but introduces longer delay in zooming and uses more system memory.",
          "type": "integer",
          "default": 4194304
        },
        "pages-per-row": {
          "description": "Defines the number of pages that are rendered next to each other in a row.",
          "type": "integer",
          "default": 1
        },
        "first-page-column": {
          "description": "Defines the column in which the first page will be displayed. This setting is stored separately for every value of pages-per-row according to the following pattern \\<1 page per row\\>:\\[\\<2 pages per row\\>\\[: \\...\\]\\]. The last value in the list will be used for all other number of pages per row if not set explicitly.",
          "type": "string",
          "default": "1:2",
          "pattern": "\\d+(:\\d+)*"
        },
        "recolor": {
          "description": "En/Disables recoloring",
          "type": "boolean",
          "default": false
        },
        "recolor-keephue": {
          "description": "En/Disables keeping original hue when recoloring",
          "type": "boolean",
          "default": false
        },
        "recolor-darkcolor": {
          "description": "Defines the color value that is used to represent dark colors in recoloring mode",
          "type": "string",
          "default": "#FFFFFF",
          "format": "color"
        },
        "recolor-lightcolor": {
          "description": "Defines the color value that is used to represent light colors in recoloring mode",
          "type": "string",
          "default": "#000000",
          "format": "color"
        },
        "recolor-reverse-video": {
          "description": "Defines if original image colors should be kept while recoloring.",
          "type": "boolean",
          "default": false
        },
        "render-loading": {
          "description": "Defines if the \\\"Loading\\...\\\" text should be displayed if a page is rendered.",
          "type": "boolean",
          "default": true
        },
        "render-loading-bg": {
          "description": "Defines the background color that is used for the \\\"Loading\\...\\\" text.",
          "type": "string",
          "default": "#FFFFFF",
          "format": "color"
        },
        "render-loading-fg": {
          "description": "Defines the foreground color that is used for the \\\"Loading\\...\\\" text.",
          "type": "string",
          "default": "#000000",
          "format": "color"
        },
        "scroll-hstep": {
          "description": "Defines the horizontal step size of scrolling by calling the scroll command once",
          "type": "number",
          "default": -1.0
        },
        "scroll-step": {
          "description": "Defines the step size of scrolling by calling the scroll command once",
          "type": "number",
          "default": 40.0
        },
        "scroll-full-overlap": {
          "description": "Defines the proportion of the current viewing area that should be visible after scrolling a full page.",
          "type": "number",
          "default": 0.0
        },
        "scroll-wrap": {
          "description": "Defines if the last/first page should be wrapped",
          "type": "boolean",
          "default": false
        },
        "show-directories": {
          "description": "Defines if the directories should be displayed in completion.",
          "type": "boolean",
          "default": true
        },
        "show-hidden": {
          "description": "Defines if hidden files and directories should be displayed in completion.",
          "type": "boolean",
          "default": false
        },
        "show-recent": {
          "description": "Defines the number of recent files that should be displayed in completion. If the value is negative, no upper bounds are applied. If the value is 0, no recent files are shown.",
          "type": "integer",
          "default": 10
        },
        "scroll-page-aware": {
          "description": "Defines if scrolling by half or full pages stops at page boundaries.",
          "type": "boolean",
          "default": false
        },
        "link-zoom": {
          "description": "En/Disables the ability of changing zoom when following links.",
          "type": "boolean",
          "default": true
        },
        "link-hadjust": {
          "description": "En/Disables aligning to the left internal link targets, for example from the index.",
          "type": "boolean",
          "default": true
        },
        "search-hadjust": {
          "description": "En/Disables horizontally centered search results.",
          "type": "boolean",
          "default": true
        },
        "window-title-basename": {
          "description": "Use basename of the file in the window title.",
          "type": "boolean",
          "default": false
        },
        "window-title-home-tilde": {
          "description": "Display a short version of the file path, which replaces \\$HOME with \\~, in the window title.",
          "type": "boolean",
          "default": false
        },
        "window-title-page": {
          "description": "Display the page number in the window title.",
          "type": "boolean",
          "default": false
        },
        "statusbar-basename": {
          "description": "Use basename of the file in the statusbar.",
          "type": "boolean",
          "default": false
        },
        "statusbar-page-percent": {
          "description": "Display (current page / total pages) as a percent in the statusbar.",
          "type": "boolean",
          "default": false
        },
        "statusbar-home-tilde": {
          "description": "Display a short version of the file path, which replaces \\$HOME with \\~, in the statusbar.",
          "type": "boolean",
          "default": false
        },
        "zoom-center": {
          "description": "En/Disables horizontally centered zooming.",
          "type": "boolean",
          "default": false
        },
        "vertical-center": {
          "description": "Center the screen at the vertical midpoint of the page by default.",
          "type": "boolean",
          "default": false
        },
        "zoom-max": {
          "description": "Defines the maximum percentage that the zoom level can be.",
          "type": "integer",
          "default": 1000
        },
        "zoom-min": {
          "description": "Defines the minimum percentage that the zoom level can be.",
          "type": "integer",
          "default": 10
        },
        "zoom-step": {
          "description": "Defines the amount of percent that is zoomed in or out on each command.",
          "type": "integer",
          "default": 10
        },
        "selection-clipboard": {
          "description": "Defines the X clipboard into which mouse-selected data will be written. When it is \\\"clipboard\\\", selected data will be written to the CLIPBOARD clipboard, and can be pasted using the Ctrl+v key combination. When it is \\\"primary\\\", selected data will be written to the PRIMARY clipboard, and can be pasted using the middle mouse button, or the Shift-Insert key combination.",
          "type": "string",
          "default": "primary",
          "enum": [
            "clipboard",
            "primary"
          ]
        },
        "selection-notification": {
          "description": "Defines if a notification should be displayed after selecting text.",
          "type": "boolean",
          "default": true
        },
        "synctex": {
          "description": "En/Disables SyncTeX backward synchronization support.",
          "type": "boolean",
          "default": true
        },
        "synctex-editor-command": {
          "description": "Defines the command executed for SyncTeX backward synchronization.",
          "type": "string"
        },
        "index-fg": {
          "description": "Defines the foreground color of the index mode.",
          "type": "string",
          "default": "#DDDDDD",
          "format": "color"
        },
        "index-bg": {
          "description": "Define the background color of the index mode.",
          "type": "string",
          "default": "#232323",
          "format": "color"
        },
        "index-active-fg": {
          "description": "Defines the foreground color of the selected element in index mode.",
          "type": "string",
          "default": "#232323",
          "format": "color"
        },
        "index-active-bg": {
          "description": "Define the background color of the selected element in index mode.",
          "type": "string",
          "default": "#9FBC00",
          "format": "color"
        },
        "sandbox": {
          "description": "Defines the sandbox mode to use for the seccomp syscall filter. Possible values are \\\"none\\\", \\\"normal\\\" and \\\"strict\\\". If \\\"none\\\" is used, the sandbox will be disabled. The use of \\\"normal\\\" will provide minimal protection and allow normal use of zathura with support for all features. The \\\"strict\\\" mode is a read only sandbox that is intended for viewing documents only.",
          "enum": [
            "none",
            "normal",
            "strict"
          ],
          "type": "string",
          "default": "normal"
        },
        "window-icon-document": {
          "description": "Defines whether the window document should be updated based on the first page of a dcument.",
          "type": "boolean",
          "default": false
        },
        "page-right-to-left": {
          "description": "Defines whether pages in multi-column view should start from the right side.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "include": {
      "description": "Including another config file\nThis commands allows one to include other configuration files. If a relative path is given, the path will be resolved relative to the configuration file that is currently processed.\ninclude another-config ",
      "type": "array"
    },
    "map": {
      "description": "Mapping a shortcut\nIt is possible to map or remap new key bindings to shortcut functions which allows a high level of customization. The **:map** command can also be used in the *zathurarc* file to make those changes permanent:\nmap [mode] <binding> <shortcut function> <argument> \n***Mode***\n:   The **map** command expects several arguments where only the **binding** as well as the **shortcut-function** argument is required. Since zathura uses several modes it is possible to map bindings only for a specific mode by passing the **mode** argument which can take one of the following values:\n-   normal (default) -   fullscreen -   presentation -   index \nThe brackets around the value are mandatory.\n***Single* key binding**\n:   The (possible) second argument defines the used key binding that should be mapped to the shortcut function and is structured like the following. On the one hand it is possible to just assign single letters, numbers or signs to it:\n>     map a shortcut_function optional_argument >     map b shortcut_function optional_argument >     map c shortcut_function optional_argument >     map 1 shortcut_function optional_argument >     map 2 shortcut_function optional_argument >     map 3 shortcut_function optional_argument >     map ! shortcut_function optional_argument >     map ? shortcut_function optional_argument \n***Using* modifiers**\n:   It is also possible to use modifiers like the Control or Alt button on the keyboard. It is possible to use the following modifiers:\n-   A - Alt -   C - Control -   S - Shift \nIf any of the modifiers should be used for a binding, it is required to define the **binding** with the following structure:\nmap <A-a> shortcut_function map <C-a> shortcut_function \n***Special* keys**\n:   zathura allows it also to assign keys like the space bar or the tab button which also have to be written in between angle brackets. The following special keys are currently available:\n>     Identifier Description > >     BackSpace  Back space >     CapsLock   Caps lock >     Esc        Escape >     Down       Arrow down >     Up         Arrow up >     Left       Arrow left >     Right      Arrow right >     F1         F1 >     F2         F2 >     F3         F3 >     F4         F4 >     F5         F5 >     F6         F6 >     F7         F7 >     F8         F8 >     F9         F9 >     F10        F10 >     F11        F11 >     F12        F12 >     PageDown   Page Down >     PageUp     Page Up >     Return     Return >     Space      Space >     Super      Windows key >     Tab        Tab >     Print      Print key \nOf course it is possible to combine those special keys with a modifier. The usage of those keys should be explained by the following examples:\nmap <Space> shortcut_function map <C-Space> shortcut_function \n***Mouse* buttons**\n:   It is also possible to map mouse buttons to shortcuts by using the following special keys:\n>     Identifier Description > >     Button1    Mouse button 1 >     Button2    Mouse button 2 >     Button3    Mouse button 3 >     Button4    Mouse button 4 >     Button5    Mouse button 5 \nThey can also be combined with modifiers:\nmap <Button1> shortcut_function map <C-Button1> shortcut_function \n***Buffer* commands**\n:   If a mapping does not match one of the previous definition but is still a valid mapping it will be mapped as a buffer command:\n>     map abc quit >     map test quit \n***Shortcut* functions**\n:   The following shortcut functions can be mapped:\n-   **abort** Switch back to normal mode. -   **adjust_window** Adjust page width. Possible arguments are **best-fit** and **width**. -   **change_mode** Change current mode. Pass the desired mode as argument. -   **display_link**: Display link target. -   **exec**: Execute an external command. **\\$FILE** expands to the current document path, and **\\$PAGE** to the current page number. -   **focus_inputbar** Focus inputbar. -   **follow** Follow a link. -   **goto** Go to a certain page. -   **jumplist** Move forwards/backwards in the jumplist. Pass **forward** as argument to move to the next entry and **backward** to move to the previous one. -   **navigate** Navigate to the next/previous page. -   **navigate_index** Navigate through the index. -   **print** Show the print dialog. -   **quit** Quit zathura. -   **recolor** Recolor pages. -   **reload** Reload the document. -   **rotate** Rotate the page. Pass **rotate-ccw** as argument for counterclockwise rotation and **rotate-cw** for clockwise rotation. -   **scroll** Scroll. -   **search** Search next/previous item. Pass **forward** as argument to search for the next hit and **backward** to search for the previous hit. -   **set** Set an option. -   **snap_to_page** Snaps to the current page. Equivalent to **goto \\<current_page\\>** -   **toggle_fullscreen** Toggle fullscreen. -   **toggle_index** Show or hide index. -   **toggle_inputbar** Show or hide inputbar. -   **toggle_page_mode** Toggle between one and multiple pages per row. -   **toggle_statusbar** Show or hide statusbar. -   **zoom** Zoom in or out. -   **mark_add** Set a quickmark. -   **mark_evaluate** Go to a quickmark. -   **feedkeys** Simulate key presses. Note that all keys will be interpreted as if pressing a key on the keyboard. To input uppercase letters, follow the same convention as for key bindings, i.e. for **X**, use **\\<S-X\\>**. \n***Pass* arguments**\n:   Some shortcut function require or have optional arguments which influence the behaviour of them. Those can be passed as the last argument:\n>     map <C-i> zoom in >     map <C-o> zoom out \nPossible arguments are:\nbest-fit\nbottom\nbackward\ncollapse\ncollapse-all\ndefault\ndown\nexpand\nexpand-all\nforward\nfull-down\nfull-up\nhalf-down\nhalf-up\nin\nleft\nnext\nout\npage-bottom\npage-top\nprevious\nright\nrotate-ccw\nrotate-cw\nselect\nspecific\ntoggle\ntop\nup\nwidth",
      "type": "object"
    },
    "unmap": {
      "description": "Removing a shortcut\nIn addition to mapping or remaping custom key bindings it is possible to remove existing ones by using the **:unmap** command. The command is used in the following way (the explanation of the parameters is described in the **map** section of this document\nunmap [mode] <binding> ",
      "type": "object"
    }
  }
}
